What happens when you initialize a repository? Why do you need to do it?

    The .git folder gets installed. It is necessary
    to begin detecting and tracking files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    You never really work from the staging area. It
    is valuable because it allows you to commit only
    one or some of the files at a time.

How can you use the staging area to make sure you have one commit per logical change?

    Even if you have work on a lot of stuff, you can
    still choose to commit each file on its own.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    When you want to try out a new version of your
    program while keeping the main version intact.
    Branched would allow you to quickly switch between
    versions and keep them separate.

How do the diagrams help you visualize the branch structure?

    They show each branch like a path. You can
    easily see the commits for each branch and
    where the branched diverged.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    All of the commits from both branches are now
    included. It is represented as two branches
    converging because now all of the commits arguments parts of one branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    Automatic merge is a lot faster, but may have
    unintended results. Manual merges take longer but
    give you control over how things get merged.
